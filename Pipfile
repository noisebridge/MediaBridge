[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[packages]
beartype = "~=0.19"
datasette = "~=0.65"
numpy = "~=1.26"
pandas = "~=2.2"
pymongo = "~=4.10"
python-dotenv = "~=1.0"
rectools-lightfm = "~=1.17.3"
requests = "~=2.26"
ruff = "~=0.7"
scikit-surprise = "~=1.1"
scipy = "~=1.14"
sqlalchemy = "~=2.0"
tqdm = "~=4.66"
typer = "~=0.12"

[dev-packages]
mypy = "~=1.14"
pandas-stubs = "~=2.2"
pre-commit = "~=4.1"
pyright = "~=1.1"
pytest = "~=8.3"
pytest-cov = "~=5.0"
ruff = "~=0.7"
types-requests = "~=2.32"
types-tqdm = "~=4.67"

[requires]
python_version = "3.12"

[scripts]
browse = "pipenv run datasette serve --host 0.0.0.0 out/movies.sqlite"
coverage = "pipenv run bin/coverage.sh"
lint = "pipenv run bin/lint.sh"
mb = "pipenv run python -m mediabridge.main"

# These two do the same thing. Some folks prefer the unittest runner. For example,
# it works better with "tqdm" and with "print" debugging, and offers nicer traces.
test = "pipenv run python -m pytest"
unittest = "bash -c 'pipenv run python -m unittest $(find tests mediabridge -name *_test.py)'"
