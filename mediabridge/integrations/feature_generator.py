"""
Program that reads movie_titles.txt from mediabridge/data and creates a JSONL file with
the movie title, year, and a description generated by the Ollama API.

TO-DO: Improve functionality to generate new colums for movies in database.
TO-DO: Remove Main in file, use typer in mediabridge/main.py instead.
TO-DO: Add tests for this file.

Run with:
    PYTHONPATH=$(pwd) python mediabridge/integrations/description_generator_temp.py --skip-lines 208
"""

import argparse
import json

from mediabridge.definitions import PROJECT_DIR
from mediabridge.integrations.ollama_api import generate_prompt_response


def generate_descriptions(skip_lines: int = 0) -> None:
    ADJ_DATA_DIR = PROJECT_DIR / "mediabridge" / "data"
    input_path = ADJ_DATA_DIR / "movie_titles.txt"
    output_path = ADJ_DATA_DIR / "movie_titles_plus_descriptions.jsonl"

    with open(input_path, "r", encoding="latin1") as f1:
        for i, raw_line in enumerate(f1):
            if i < skip_lines:
                continue

            line = raw_line.strip().split(",", maxsplit=2)
            if len(line) < 3:
                continue  # skip bad lines

            movie_id, year, title = line

            print(f"writing description for {title}...")

            prompt = f"Write a paragraph description for the {year} production '{title}' â€” no introductions, titles, or extra formatting."
            response = generate_prompt_response(prompt=prompt)

            movie_data = {
                "id": movie_id,
                "year": year,
                "title": title,
                "description": response.strip(),
            }

            with open(output_path, "a", encoding="utf-8") as f2:
                f2.write(json.dumps(movie_data, ensure_ascii=False) + "\n")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Generate movie descriptions into a JSONL file."
    )
    parser.add_argument(
        "--skip-lines",
        type=int,
        default=0,
        help="Number of lines to skip in the input file.",
    )
    args = parser.parse_args()

    generate_descriptions(skip_lines=args.skip_lines)
